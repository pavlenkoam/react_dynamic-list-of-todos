{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","showModal","activeTodo","activeTodoId","id","className","map","todo","completed","classnames","title","type","onClick","TodoFilter","filter","useState","query","setQuerty","todoStatus","setTodoStatus","useEffect","toLowerCase","includes","trim","Error","onChange","event","target","value","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","closeModal","user","setUser","userId","userFromServer","href","email","name","App","setTodos","setActiveTodo","isShowModal","setisShowModal","vsibleTodos","setVisibleTodos","todosFromServer","visibleTodos","length","find","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c27f1a05.chunk.js","sourcesContent":["import React from 'react';\nimport classnames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[];\n  showModal: (id: number) => void;\n  activeTodo: Todo | null;\n}\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  showModal,\n  activeTodo,\n}) => {\n  const activeTodoId = activeTodo ? activeTodo.id : null;\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n      <tbody>\n        {todos.map(todo => {\n          return (\n            <tr\n              data-cy=\"todo\"\n              className=\"\"\n              key={todo.id}\n            >\n              <td className=\"is-vcentered\">{todo.id}</td>\n              <td className=\"is-vcentered\">\n                {todo.completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n              <td className=\"is-vcentered\">\n                <p className={classnames({\n                  'has-text-danger': !todo.completed,\n                  'has-text-success': todo.completed,\n                })}\n                >\n                  {todo.title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => showModal(todo.id)}\n                >\n                  <span className=\"icon\">\n                    <i className={classnames('far', {\n                      'fa-eye-slash': todo.id === activeTodoId,\n                      'fa-eye': todo.id !== activeTodoId,\n                    })}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  filter: (visibleTodos: Todo[]) => void;\n  todos: Todo[];\n}\n\nexport const TodoFilter: React.FC<Props> = ({ filter, todos }) => {\n  const [query, setQuerty] = useState('');\n  const [todoStatus, setTodoStatus] = useState('all');\n\n  useEffect(() => {\n    filter(todos\n      .filter(todo => (\n        todo.title.toLowerCase().includes(query.trim().toLowerCase())\n      ))\n      .filter(todo => {\n        switch (todoStatus) {\n          case 'all':\n            return true;\n\n          case 'active':\n            return !todo.completed;\n\n          case 'completed':\n            return todo.completed;\n\n          default:\n            throw new Error('wrong todo status');\n        }\n      }));\n  }, [query, todoStatus]);\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(event) => {\n              setTodoStatus(event.target.value);\n            }}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={event => setQuerty(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {query !== '' && (\n            <>\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                data-cy=\"clearSearchButton\"\n                type=\"button\"\n                className=\"delete\"\n                onClick={() => {\n                  setQuerty('');\n                }}\n              />\n            </>\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(1000)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ninterface Props {\n  todo: Todo;\n  closeModal: () => void;\n}\n\nexport const TodoModal: React.FC<Props> = ({ todo, closeModal }) => {\n  const [user, setUser] = useState<User>();\n\n  useEffect(() => {\n    // eslint-disable-next-line max-len\n    getUser(todo.userId)\n      .then(userFromServer => setUser(userFromServer));\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {todo.id}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={closeModal}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n              {' by '}\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [activeTodo, setActiveTodo] = useState<Todo | null>(null);\n  const [isShowModal, setisShowModal] = useState(false);\n  const [vsibleTodos, setVisibleTodos] = useState(todos);\n\n  useEffect(() => {\n    getTodos()\n      .then(todosFromServer => {\n        setTodos(todosFromServer);\n        setVisibleTodos(todosFromServer);\n      });\n  }, []);\n\n  const showModal = (id: number) => {\n    setActiveTodo(todos.find(todo => todo.id === id) || todos[0]);\n    setisShowModal(true);\n  };\n\n  const closeModal = () => {\n    setisShowModal(false);\n    setActiveTodo(null);\n  };\n\n  const todosFilter = (visibleTodos: Todo[]) => {\n    setVisibleTodos(visibleTodos);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter filter={todosFilter} todos={todos} />\n            </div>\n\n            <div className=\"block\">\n              {todos.length > 0 ? (\n                <TodoList\n                  todos={vsibleTodos}\n                  showModal={showModal}\n                  activeTodo={activeTodo}\n                />\n              ) : (\n                <Loader />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {isShowModal\n        && activeTodo\n        && (\n          <TodoModal\n            todo={activeTodo}\n            closeModal={closeModal}\n          />\n        )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}